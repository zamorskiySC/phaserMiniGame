!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.rexhsladjustpipelineplugin=e():t.rexhsladjustpipelineplugin=e()}(window,function(){return function(t){var e={};function n(r){if(e[r])return e[r].exports;var s=e[r]={i:r,l:!1,exports:{}};return t[r].call(s.exports,s,s.exports,n),s.l=!0,s.exports}return n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var s in t)n.d(r,s,function(e){return t[e]}.bind(null,s));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=205)}({205:function(t,e,n){"use strict";n.r(e);var r="#ifdef GL_FRAGMENT_PRECISION_HIGH\n#define highmedp highp\n#else\n#define highmedp mediump\n#endif\nprecision highmedp float;\n\n// Scene buffer\nuniform sampler2D uMainSampler; \nvarying vec2 outTexCoord;\n\n// Effect parameters\nuniform float hueRotate;\nuniform float satAdjust;\nuniform float lumAdjust;\n\nvec3 RGBToHSL(vec3 color) {\n  vec3 hsl = vec3(0.0, 0.0, 0.0);\n\t\n  float fmin = min(min(color.r, color.g), color.b);\n  float fmax = max(max(color.r, color.g), color.b);\n  float delta = fmax - fmin;\n\n  hsl.z = (fmax + fmin) / 2.0;\n\n  if (delta == 0.0) {\n\t\thsl.x = 0.0;\n\t\thsl.y = 0.0;\n\t} else {\n\t\tif (hsl.z < 0.5) {\n\t\t\thsl.y = delta / (fmax + fmin);\n    } else {\n      hsl.y = delta / (2.0 - fmax - fmin);\n    }\n\t\t\n\t\tfloat dR = (((fmax - color.r) / 6.0) + (delta / 2.0)) / delta;\n\t\tfloat dG = (((fmax - color.g) / 6.0) + (delta / 2.0)) / delta;\n\t\tfloat dB = (((fmax - color.b) / 6.0) + (delta / 2.0)) / delta;\n\n\t\tif (color.r == fmax) {\n\t\t\thsl.x = dB - dG;\n    } else if (color.g == fmax) {\n\t\t\thsl.x = (1.0 / 3.0) + dR - dB;\n\t\t} else if (color.b == fmax) {\n      hsl.x = (2.0 / 3.0) + dG - dR;\n    }\n\n\t\tif (hsl.x < 0.0) {\n\t\t\thsl.x += 1.0;\n    } else if (hsl.x > 1.0) {\n      hsl.x -= 1.0;\n    }\n\t}\n\n\treturn hsl;\n}\n\nfloat HUEToRGB(float f1, float f2, float hue) {\n\tif (hue < 0.0) {\n\t\thue += 1.0;\n  } else if (hue > 1.0) {\n    hue -= 1.0;\n  }\n\t\t\n\tfloat ret;\n\t\n\tif ((6.0 * hue) < 1.0) {\n\t\tret = f1 + (f2 - f1) * 6.0 * hue;\n  } else if ((2.0 * hue) < 1.0) {\n\t\tret = f2;\n\t} else if ((3.0 * hue) < 2.0) {\n\t\tret = f1 + (f2 - f1) * ((2.0 / 3.0) - hue) * 6.0;\n  } else {\n    ret = f1;\n  }\n\t\n\treturn ret;\n}\nvec3 HSLToRGB(vec3 hsl) {\n\tvec3 rgb = vec3(hsl.z);\n\t\n\tif (hsl.y != 0.0) {\n\t\tfloat f2;\n\t\t\n\t\tif (hsl.z < 0.5) {\n\t\t\tf2 = hsl.z * (1.0 + hsl.y);\n    } else {\n      f2 = (hsl.z + hsl.y) - (hsl.y * hsl.z);\n    }\n\t\t\t\n\t\tfloat f1 = 2.0 * hsl.z - f2;\n\t\t\n\t\trgb.r = HUEToRGB(f1, f2, hsl.x + (1.0 / 3.0));\n\t\trgb.g = HUEToRGB(f1, f2, hsl.x);\n\t\trgb.b = HUEToRGB(f1, f2, hsl.x - (1.0 / 3.0));\n  }\n  \n  return rgb;\n}\n\nvoid main(void) {\n\tvec4 front = texture2D(uMainSampler, outTexCoord);\n\tvec3 hsl = RGBToHSL(front.rgb);\n\thsl.x -= hueRotate;\n\thsl.y *= satAdjust;\n\thsl.z += (lumAdjust - 0.5) * front.a;\n\tvec3 rgb = HSLToRGB(hsl);\n\tgl_FragColor = vec4(rgb, front.a);\n}\n";const s=Phaser.Renderer.WebGL.Pipelines.TextureTintPipeline,o=Phaser.Utils.Objects.GetValue;Phaser.Math.Clamp;var l=class extends s{constructor(t,e,n){var s=t.game;super({game:s,renderer:s.renderer,fragShader:r}),this._hueRotate=0,this._satAdjust=0,this._lumAdjust=0,s.renderer.addPipeline(e,this),this.resetFromJSON(n)}resetFromJSON(t){return this.setHueRotate(o(t,"hueRotate",0)),this.setSatAdjust(o(t,"satAdjust",1)),this.setLumAdjust(o(t,"lumAdjust",.5)),this}get hueRotate(){return this._hueRotate}set hueRotate(t){this._hueRotate=t,this.setFloat1("hueRotate",t%1)}setHueRotate(t){return this.hueRotate=t,this}get satAdjust(){return this._satAdjust}set satAdjust(t){this._satAdjust=t,this.setFloat1("satAdjust",t)}setSatAdjust(t){return this.satAdjust=t,this}get lumAdjust(){return this._lumAdjust}set lumAdjust(t){this._lumAdjust=t,this.setFloat1("lumAdjust",t)}setLumAdjust(t){return this.lumAdjust=t,this}};e.default=class extends Phaser.Plugins.BasePlugin{constructor(t){super(t)}start(){this.game.events.once("destroy",this.destroy,this)}add(t,e,n){return new l(t,e,n)}}}}).default});